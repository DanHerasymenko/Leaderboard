definitions:
  auth.SingInReqBody:
    properties:
      nickName:
        maxLength: 32
        minLength: 3
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - nickName
    - password
    type: object
  auth.SingInResp200Body:
    properties:
      token:
        type: string
    type: object
  auth.SingUpReqBody:
    properties:
      nickName:
        maxLength: 32
        minLength: 3
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - nickName
    - password
    type: object
  score.Details:
    properties:
      losses:
        type: integer
      playerNickname:
        type: string
      rank:
        type: integer
      rating:
        type: integer
      region:
        type: string
      winLoseRatio:
        type: string
      wins:
        type: integer
    type: object
  score.ListScoresReqBody:
    properties:
      last_received_id:
        type: string
      season:
        type: string
    required:
    - season
    type: object
  score.Score:
    properties:
      scoreDetails:
        $ref: '#/definitions/score.Details'
      scoreID:
        type: string
      scoredAt:
        type: string
      season:
        type: string
    type: object
  score.SubmitScoreReqBody:
    properties:
      losses:
        minimum: 0
        type: integer
      rating:
        description: NickName string `json:"nickName" validate:"required,min=3,max=32,alphanum"`
        minimum: 1
        type: integer
      region:
        enum:
        - EU
        - NA
        - AS
        - SA
        - AF
        type: string
      wins:
        minimum: 0
        type: integer
    required:
    - losses
    - rating
    - region
    - wins
    type: object
  score.SubmitScoreResp200Body:
    properties:
      score:
        $ref: '#/definitions/score.Score'
    type: object
info:
  contact: {}
  description: This is a sample server for Leaderboard API.
  title: Leaderboard API
  version: "1.0"
paths:
  /api/auth/singin:
    post:
      description: SingIn
      parameters:
      - description: SingIn request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.SingInReqBody'
      responses:
        "200":
          description: SingIn success
          schema:
            $ref: '#/definitions/auth.SingInResp200Body'
        "401":
          description: invalid credentials
          schema:
            type: string
      summary: SingIn
      tags:
      - Auth
  /api/auth/singup:
    post:
      description: SingUp
      parameters:
      - description: SingUp request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.SingUpReqBody'
      responses:
        "200":
          description: SingUp success
          schema:
            type: string
        "409":
          description: user already exists
          schema:
            type: string
      summary: SingUp
      tags:
      - Auth
  /api/score/delete:
    delete:
      description: Deletes the entire leaderboard (for admin use).
      responses:
        "200":
          description: DeleteAllScores success
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - UserTokenAuth: []
      summary: DeleteAllScores
      tags:
      - Score
  /api/score/list:
    post:
      description: Get list of scores based on season
      parameters:
      - description: ListScores request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/score.ListScoresReqBody'
      responses:
        "200":
          description: ListScores success
          schema:
            items:
              $ref: '#/definitions/score.Score'
            type: array
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: ListScores
      tags:
      - Score
  /api/score/submit:
    post:
      description: Create or updates if exists the playerâ€™s score
      parameters:
      - description: SubmitScore request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/score.SubmitScoreReqBody'
      responses:
        "200":
          description: SubmitScore success
          schema:
            $ref: '#/definitions/score.SubmitScoreResp200Body'
        "400":
          description: bad request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - UserTokenAuth: []
      summary: SubmitScore
      tags:
      - Score
  /api/score/top:
    get:
      description: Retrieves the top players based on their ranking
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: season
        in: query
        name: season
        type: string
      responses:
        "200":
          description: TopScores success
          schema:
            items:
              $ref: '#/definitions/score.Score'
            type: array
        "500":
          description: internal server error
          schema:
            type: string
      summary: TopScores
      tags:
      - Score
securityDefinitions:
  UserTokenAuth:
    in: header
    name: X-User-Token
    type: apiKey
swagger: "2.0"
